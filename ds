{
    "status": "ok",
    "data": [
        {
            "apps": [
                {
                    "failCount": 0,
                    "items": [
                        {
                            "comment": "",
                            "name": "cpu_usage_fatal",
                            "publishedTime": 1740095730,
                            "result": "pass"
                        },
                        {
                            "comment": "",
                            "name": "cpu_usage_warning",
                            "publishedTime": 1740095730,
                            "result": "pass"
                        },
                        {
                            "comment": "",
                            "name": "memory_usage_fatal",
                            "publishedTime": 1740095730,
                            "result": "pass"
                        },
                        {
                            "comment": "",
                            "name": "memory_usage_warning",
                            "publishedTime": 1740095730,
                            "result": "pass"
                        },
                        {
                            "comment": "",
                            "name": "storage_usage_fatal",
                            "publishedTime": 1740095730,
                            "result": "pass"
                        },
                        {
                            "comment": "",
                            "name": "storage_usage_warning",
                            "publishedTime": 1740095730,
                            "result": "pass"
                        },
                        {
                            "comment": "",
                            "name": "connection",
                            "publishedTime": 1740095730,
                            "result": "pass"
                        }
                    ],
                    "name": "system",
                    "passCount": 7,
                    "publishedTime": 1740095730
                }
            ],
            "publishedTime": 1739925174
        }
    ]
}

// 진단 결과 리포트 조회
pub(crate) fn get_report(
) -> impl Filter<Extract = (impl warp::Reply,), Error = warp::Rejection> + Clone {
    warp::path!("diagnosis" / "reports" / i64)
        .and(warp::get())
        .and(warp::header::optional::<String>(ACP_HEADER_TOKEN))
        .and_then(inner::get_report)
}

mod innner {

    pub async fn get_report(
        id: i64,
        _token: Option<String>,
    ) -> Result<impl warp::Reply, warp::Rejection> {
        // TODO 권한 추가
        // if !access_control().check_permission(token.as_deref(), Permission::) {
        //     return Ok(Response::err("Permission denied".to_string()));
        // }

        info!("get_report");

        let report = match diagnosis::get_report(id).await {
            Ok(report) => report,
            Err(e) => {
                error!("get_report failed: {}", e);
                return Ok(Response::err("get_report failed".to_string()));
            }
        };

        Ok(Response::ok_with_data(json!(report)))
    }
}
